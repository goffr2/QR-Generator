<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wWvel4PrOP8D8e7e/aDeCnkAAAAASUVORK5CYII=
</value>
  </data>
</root>